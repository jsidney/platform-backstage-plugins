app:
  title: VeeCode platform backstage plugins
  baseUrl: http://localhost:3000

organization:
  name: VeeCode platform backstage plugins

permission:
  enabled: true

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  auth:
    externalAccess:
      - type: static
        options:
          token: ${BACKEND_AUTH_SECRET_KEY}
          subject: backend-secret

  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
   github:
     - host: github.com
       token: ${GITHUB_TOKEN_SECRET}
  #github:
  #  - host: github.com
  #    apps:
  #      - $include: github-app-backstage-devportal-gap-credentials.yaml
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}
  #gitlab:
    #- host: gitlab.com
    #  token: ${GITLAB_TOKEN_SECRET}

proxy:
  endpoints:
    '/github/api':
      target: https://api.github.com/repos
      credentials: require
      allowedHeaders: ['Authorization', 'X-GitHub-Api-Version']
      headers: 
        Accept: application/vnd.github+json
        X-GitHub-Api-Version: "2022-11-28"
    
    '/gitlab/api':
      target: https://gitlab.com/api/v4
      credentials: require
      allowedHeaders: ['Authorization', 'Content-Type']
      headers:
        Accept: application/json 
        Content-Type: application/json
      
    # '/kong-manager/api':
    #   target: https://api.manager.apr.vee.codes
    #   credentials: require
    #   allowedHeaders: ['Authorization']
    #   headers: 
    #     Accept: application/json
    #     content-type: application/json

    # '/kong-other-manager/api': #should be used as a annotation
    #   target: https://api.manager.apr.vee.codes
    #   credentials: require
    #   allowedHeaders: ['Authorization']
    #   headers: 
    #     Accept: application/json
    #     content-type: application/json

  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # '/test':
  #   target: 'https://example.com'
  #   changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  session:
    secret: ${AUTH_SESSION_SECRET}
  environment: development
  providers: 
    github:
      development:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
    oidc:
      development:
        metadataUrl: ${AUTH_OIDC_METADATA_URL}
        clientId: ${AUTH_OIDC_CLIENT_ID}
        clientSecret: ${AUTH_OIDC_CLIENT_SECRET}
        prompt: auto
        signIn:
          resolvers:
            - resolver: emailLocalPartMatchingUserEntityName

scaffolder:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN_SECRET}
  gitlab:
   - host: gitlab.com
     token: ${GITLAB_TOKEN_SECRET}

catalog:
 
    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]